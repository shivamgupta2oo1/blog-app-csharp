@model Bloggie.Web.Models.ViewModel.RegisterViewModel

@{
    ViewBag.Title = "Register";
    var message = TempData["Message"] as string;
    var messageType = TempData["MessageType"] as string;
}

<div class="full-page-body mt-5 box-shadow">
    <div class="form-container">
        <form method="post" asp-action="Register" class="register-form">
            <h1 class="form-title">Register</h1>

            <div class="form-group">
                <label for="username">Username</label>
                <input type="text" class="form-control" id="username" asp-for="Username" required>
                <span class="text-danger" asp-validation-for="Username"></span>
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" class="form-control" id="email" asp-for="Email" required>
                <span class="text-danger" asp-validation-for="Email"></span>
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" class="form-control" id="password" asp-for="Password" required>
                <span class="text-danger" asp-validation-for="Password"></span>
            </div>

            <div class="form-group">
                <p class="text-wrap">If User Already Register Move To The <a asp-controller="Account"
                        asp-action="Login">Login Page</a></p>
                <button type="submit" class="btn btn-primary text-dark fs-5 fw-bold" id="RegUser">Register</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
<script>
    function showSweetAlert(type, message) {
        Swal.fire({
            icon: type,
            title: message,
            showConfirmButton: false,
            timer: 1500
        });
    }
    $(document).ready(function () {
        var message = '@message';
        var messageType = '@messageType';
        if (message && messageType) {
            showSweetAlert(messageType, message);
        }
    });
</script>
}






<style>
    /* General Styles */
    body {
        background-color: rgb(253, 172, 236);
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    .full-page-body {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        padding: 20px;
        box-sizing: border-box;
    }

    .form-container {
        background-color: white;
        padding: 2rem;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        width: 100%;
    }

    .register-form .form-title {
        font-size: 2rem;
        margin-bottom: 1.5rem;
        text-align: center;
        color: #181414;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: bold;
        font-size: 0.9rem;
        color: #523e3e;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #b2c2d3;
        border-radius: 5px;
        font-size: 0.9rem;
    }

    .form-control:focus {
        border-color: #80bdff;
        outline: none;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .text-danger {
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .btn-primary {
        background-color: #ff6739;
        border: none;
        color: white;
        padding: 0.75rem;
        width: 100%;
        border-radius: 5px;
        font-size: 0.9rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #3ee4f0;
    }
</style>
