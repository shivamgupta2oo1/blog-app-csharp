@using Microsoft.AspNetCore.Identity
@model Bloggie.Web.Models.ViewModel.BlogDetailsViewModel
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "BlogApp";
}

<div class="container my-5 mt-3">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>

                <div class="mb-3">
                    @if (signInManager.IsSignedIn(User))
                    {
                        if (Model.Liked)
                        {
                            <a style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a id="btnLike" style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up"></i>
                            </a>
                        }
                    }
                    <span id="totalLikes" class="mb-3 totalLikes">@Model.TotalLikes</span> Likes
                </div>

                <div class="tags d-flex mb-3">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge bg-secondary me-1">@tag.Name</span>
                    }
                </div>
                <img src="@Model.FeatureImageUrl" class="d-block img-fluid mb-3" style="width: 100%; height:auto;" />

                <div class="mb-3 blog-detail-content">
                    @Html.Raw(Model.Content)
                </div>
                <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>
                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label for="form-label">Comment Description</label>
                                    <input type="text" class="form-control mb-3" asp-for="CommentDescription" required>
                                    <div class="mb-3">
                                        <button type="submit" class="btn btn-dark">Submit</button>
                                        <input type="hidden" asp-for="Id">
                                        <input type="hidden" asp-for="UrlHandle">
                                    </div>
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if (Model != null && Model.Comments.Any())
                        {
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div class="">
                                            @comment.Description
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secondary">@comment.Username</span>
                                            <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

            }
            else
            {
                <p>No Blog Post Found</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var btnLikeElement = document.getElementById('btnLike');
        var totalLikesElement = document.getElementById('totalLikes');

        async function getTotalLikes() {
            fetch('/api/blogpostlike/@Model.Id/totalLikes', {
                method: "GET",
                headers: {
                    'Content-Type': 'application/json',
                    'Access': '*/*'
                }
            })
                .then(data => data.json())
                .then(result => totalLikesElement.innerHTML = result)
        }



        async function addLikeForBLog() {
            fetch('/api/BlogPostLike/Add', {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json',
                    'Access': '*/*'
                },
                body: JSON.stringify({
                    blogPostId: '@Model.Id',
                    userId: '@userManager.GetUserId(User)'
                })
            }).then(() => {
                btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLikeElement.removeEventListener('click', addLikeForBLog);
                getTotalLikes();
            })
        }

        btnLikeElement.addEventListener('click', addLikeForBLog);
    </script>
}